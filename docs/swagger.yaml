definitions:
  store.User:
    properties:
      _:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: web04501@gmail.com
    name: API Support
    url: https://github.com/cisco100/wepost/issues/
  description: Social app for all.
  license:
    name: MIT
    url: https://github.com/cisco100/wepost/blob/main/LICENSE
  termsOfService: https://github.com/cisco100/wepost/blob/main/README.md
  title: WePost API
  version: "1.0"
paths:
  /posts/delete/{postID}:
    delete:
      consumes:
      - application/json
      description: Delete a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Deletes a post
      tags:
      - posts
  /users/getuser/{id}:
    get:
      consumes:
      - application/json
      description: Fetches a user profile by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Fetches a user profile
      tags:
      - users
  /users/getuser/{userID}/follow:
    put:
      consumes:
      - application/json
      description: Follows a user by ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User followed
          schema:
            type: string
        "400":
          description: User payload missing
          schema: {}
        "404":
          description: User not found
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Follows a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
